name: Conan Dependency Submission
description: Submits Conan dependencies to the GitHub Dependency Submission API
branding:
  icon: "square"
  color: "blue"
inputs:
  target:
    description: "The target directory to submit dependencies for"
    required: false
  python-version:
    description: "The version of python to use"
    required: false
    default: "3.10"
    choices: ["3.12", "3.11", "3.10", "3.9", "3.8", "3.7"]
  conan-version:
    description: "The version of conan to use"
    required: false
    default: "latest"
  github-server:
    description: "The GitHub server to use"
    required: false
    default: "github.com"
  conanfile:
    description: "The conanfile to use"
    required: false
  conan-profile:
    description: "Name of the Conan profile to use"
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}

    - name: Run Conan
      shell: bash

      env:
        INPUTS_TARGET: ${{ inputs.target }}
        INPUTS_PYTHON_VERSION: ${{ inputs.python-version }}
        INPUTS_CONAN_VERSION: ${{ inputs.conan-version }}
        INPUTS_GITHUB_SERVER: ${{ inputs.github-server }}
        INPUTS_CONANFILE: ${{ inputs.conanfile }}
        INPUTS_CONAN_PROFILE: ${{ inputs.conan-profile }}
        GH_TOKEN: ${{ github.token }}

      run: |
        CONAN_FLAGS=""

        # set debug output
        if [[ "${RUNNER_DEBUG}" == "1" ]]; then
          CONAN_FLAGS+=" --debug"
        fi

        # set target directory, if given
        if [[ -n "${INPUTS_TARGET}" ]]; then
          CONAN_FLAGS+=" --target ${INPUTS_TARGET}"
        fi

        # set conan version
        if [[ "${INPUTS_CONAN_VERSION}" == "latest" ]]; then
          CONAN_VERSION=""
        else
          CONAN_VERSION="==${INPUTS_CONAN_VERSION}"
        fi

        # set conanfile location, if given
        if [[ -n "${INPUTS_CONANFILE}" ]]; then
          CONAN_FLAGS+=" --conanfile ${INPUTS_CONANFILE}"
        fi

        # set python command
        if [[ "${OSTYPE}" == "msys" ]]; then
          PYTHON_CMD=python
        else
          PYTHON_CMD="python${INPUTS_PYTHON_VERSION}"
        fi

        # upgrade pip
        "${PYTHON_CMD}" -m pip -q install --upgrade pip

        # install conan
        "${PYTHON_CMD}" -m pip -q install conan"${CONAN_VERSION}"

        # set conan-profile location, if given, or use/set default
        if [[ -n "${INPUTS_CONAN_PROFILE}" ]]; then
          CONAN_FLAGS+=" --conan-profile ${INPUTS_CONAN_PROFILE}"
        else
          if ! conan profile path default >/dev/null 2>&1 ; then
            echo "::debug::No default Conan profile found, creating one"
            CONAN_PROFILE_OUTPUT=$(conan profile detect 2>&1)
            echo "::debug::${CONAN_PROFILE_OUTPUT}"
          fi
        fi

        # install script dependencies
        "${PYTHON_CMD}" -m pip install -q -r "${GITHUB_ACTION_PATH}/requirements.txt"

        # run conan submission
        ./conan_submit.py --github-server "${INPUTS_GITHUB_SERVER}" ${CONAN_FLAGS} "${GITHUB_WORKSPACE}"

    # - name: Upload Dependency Graph as debug artefact
    #   if: ${{ always() && runner.debug == '1' && hashFiles(inputs.output) != '' }}
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: ${{ inputs.output }}
    #     path: ${{ inputs.output }}
